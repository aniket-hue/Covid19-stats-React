{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Country/Country.jsx","App.js","index.js","components/Chart/Chart.module.css","components/Country/Country.module.css","App.module.css","images/image.png"],"names":["module","exports","Cards","props","data","className","classes","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","seperator","Date","toDateString","varian","recovered","deaths","url","fetchData","a","axios","get","realData","confirmed","lastUpdate","fetchDailyData","map","date","reportDate","total","country","updatedData","countries","name","console","log","fetchCountry","turl","Chart","state","dailyData","fetch","this","setState","lineChart","length","type","labels","datasets","label","borderColor","fill","backgroundColor","Component","Country","res","c","key","value","FormControl","NativeSelect","defaultValue","onChange","e","handleCountry","target","App","handleCountryChange","src","image","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d2de8d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, Typography, CardContent, Grid } from '@material-ui/core';\nimport classes from './Cards.module.css';\nimport cx from 'classnames';\nimport CountUp from 'react-countup';\nconst Cards = (props) => {\n    // const temp = props.data !== null ? console.log(props.data['deaths']['value']) : null;\n    // console.log(props.data);\n    return (\n        props.data !== null ?\n            <div className={classes.container}>\n                <Grid container spacing={3} justify=\"center\">\n\n                    <Grid item component={Card} xs={12} md={3} className = {cx(classes.card, classes.infected)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                            <Typography variant=\"h5\"  component=\"h2\">\n                                <CountUp\n                                    start={0}\n                                    end={props.data['confirmed']['value']}\n                                    duration={2.5}\n                                    seperator=\",\"\n                                />\n                            </Typography>\n                            <Typography color=\"textSecondary\">{new Date(props.data['lastUpdate']).toDateString()}</Typography>\n                            <Typography varian=\"body2\"  component=\"p\">Number of active cases</Typography>\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item component={Card} xs={12} md={3} className = {cx(classes.card, classes.recovered)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                            <Typography variant=\"h5\"  component=\"h2\">\n                                <CountUp\n                                    start={0}\n                                    end={props.data['confirmed']['value']}\n                                    duration={2.5}\n                                    seperator=\",\"\n                                /></Typography>\n                            <Typography color=\"textSecondary\">{new Date(props.data['lastUpdate']).toDateString()}</Typography>\n                            <Typography varian=\"body2\"  component=\"p\">Number of Recovered cases</Typography>\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item component={Card} xs={12} md={3}  className = {cx(classes.card, classes.deaths)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                            <Typography variant=\"h5\" component=\"h2\" >\n                                <CountUp\n                                    start={0}\n                                    end={props.data['confirmed']['value']}\n                                    duration={2.5}\n                                    seperator=\",\"\n                                /></Typography>\n                            <Typography color=\"textSecondary\">{new Date(props.data['lastUpdate']).toDateString()}</Typography>\n                        </CardContent>\n                    </Grid>\n\n                </Grid>\n\n            </div> : <p>Loading</p>\n    );\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async () => {\n    try {\n        const data = await axios.get(url);\n        const realData = {\n            confirmed: data.data.confirmed,\n            recovered: data.data.recovered,\n            deaths: data.data.deaths,\n            lastUpdate: data.data.lastUpdate\n        }\n        return realData;\n    } catch (error) {\n\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\n\nexport const country = async () => {\n    try {\n        const data = await axios.get(`${url}/countries`);\n        const updatedData = [...data.data.countries].map(data => data.name);\n        console.log(updatedData);\n        return updatedData;\n    }\n    catch (error) {\n\n    }\n}\n\nexport const fetchCountry = async (country) => {\n    try {\n        let turl = url;\n        turl = url + \"/countries/\" + country;\n        const data = await axios.get(turl);\n        const realData = {\n            confirmed: data.data.confirmed,\n            recovered: data.data.recovered,\n            deaths: data.data.deaths,\n            lastUpdate: data.data.lastUpdate\n        }\n        return (realData);\n        // console.log(realData);\n\n    }\n    catch (error) {\n\n    }\n}\n\n\n// export  fetchData, fetchDailyData;","import React, { Component } from 'react';\nimport { fetchDailyData } from '../../api/index';\nimport Line from 'react-chartjs-2';\nimport Bar from 'react-chartjs-2';\nimport classes from '../Chart/Chart.module.css';\nclass Chart extends Component {\n    state = {\n        dailyData: {},\n    }\n\n    async componentDidMount() {\n        const fetch = await fetchDailyData();\n        this.setState({ dailyData: fetch });\n        // console.log(JSON.stringify(fetch)+\" as\");\n        // console.log(this.state.dailyData);\n        // console.log(this.state.dailyData.map(data => data.date));\n    }\n\n\n    render() {\n        // console.log(this.state.dailyData);\n\n\n\n        const lineChart = (\n            this.state.dailyData.length ?\n                <Line\n                    type='line'\n                    data={{\n                        labels: this.state.dailyData.map(data => data.date),\n                        datasets: [{\n                            data: [...this.state.dailyData.map((data) => data.confirmed)],\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        }, {\n                            data: [...this.state.dailyData.map((data) => data.deaths)],\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                            fill: true,\n                        },\n                        ],\n                    }}\n                /> : null\n        );\n        // console.log(this.state.dailyData !== null ? lineChart.data    : null);\n        return (\n            <h1 className={classes.container}> {lineChart} </h1>\n        );\n    }\n}\n\nexport default Chart;","import React, { Component } from \"react\";\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport classes from './Country.module.css';\nimport { country } from '../../api/index';\nclass Country extends Component {\n    state = {\n        countries: null\n    }\n\n    async componentDidMount() {\n        const res = await country();\n        // console.log(res);\n        this.setState({ countries: res });\n    }\n    render() {\n        let c = 0;\n\n        const country = this.state.countries !== null ?\n            this.state.countries.map(data => {\n                // console.log(data);\n                return <option key={c++} value={data}>{data}</option>\n            }) : null;\n\n\n        return (\n            <FormControl className= {classes.FormControl}>\n                <NativeSelect defaultValue=\"Global\" onChange={e => this.props.handleCountry(e.target.value)}>\n                    <option value=\"\">Global</option>\n                    {country}\n                </NativeSelect>\n            </FormControl>\n        );\n    }\n}\n\nexport default Country;","import React, { Component } from \"react\";\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport Country from './components/Country/Country';\nimport classes from './App.module.css';\nimport { fetchData, fetchCountry } from './api/index';\nimport image from './images/image.png';\nclass App extends Component {\n    state = {\n        data: null,\n        country :'',\n    }\n    async componentDidMount() {\n        const data = await fetchData();\n        this.setState({ data: data });\n        // console.log(data);\n        // console.log(this.state.data)\n    }\n\n     handleCountryChange = async(Country) => {\n         const data = await fetchCountry(Country);\n         this.setState({ data: data, country: Country });\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <div className={classes.container}>\n                <img src = {image}/>\n                <Cards data={this.state.data} />\n                <Country handleCountry={this.handleCountryChange} />\n                <Chart />\n            </div>\n        );\n    }\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__3h-YE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","module.exports = __webpack_public_path__ + \"static/media/image.51087c64.png\";"],"sourceRoot":""}